<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.ecobay.user.mapper.MemberMapper">

	<insert id="create" parameterType="MemberVO">
		INSERT INTO MEMBER 
		(MEMBER_ID,MEMBER_NAME,PWD,BIRTH,ZIPCODE,ADDR1,ADDR2,GENDER,PHONE,JOIN_YN,REGDATE)
		values(#{member_id},#{member_name},#{pwd},#{birth},#{zipcode},#{addr1},#{addr2},#{gender},#{phone},#{join_yn},now())
	</insert>
	
	<select id="read" parameterType="String" resultType="MemberVO">
		SELECT * FROM MEMBER WHERE MEMBER_ID = #{member_id}
	</select>
	
	<select id="readAll" resultType="MemberVO">
		SELECT @ROWNUM:=@ROWNUM+1 AS RN, M.* FROM MEMBER M, (SELECT @ROWNUM:=0) TMP
	</select>
	
	<select id="count" resultType="int">
		SELECT COUNT(*) FROM MEMBER
 	</select>
 	
 	<select id="idcount" resultType="int">
 		SELECT COUNT(*) FROM MEMBER WHERE MEMBER_ID = #{member_id}
 	</select>
 	
 	<select id="pwdcheck" resultType="String">
 		SELECT PWD FROM MEMBER WHERE MEMBER_ID = #{member_id}
 	</select>
	
	<update id="verify" parameterType="MemberVO">
		UPDATE MEMBER 
		   SET JOIN_YN = TRUE
		     , MODDATE = now()
		WHERE MEMBER_ID = #{member_id}
		  AND BIRTH = #{birth}
	</update>
	
	<update id="update" parameterType="MemberVO">
		UPDATE MEMBER 
		SET    ZIPCODE = #{zipcode}
			 , ADDR1 = #{addr1}
			 , ADDR2 = #{addr2}
			 , PHONE = #{phone}
			 , MODDATE = now()
		WHERE MEMBER_ID = #{member_id}			
	</update>
	
	<update id="delete" parameterType="String"><!-- 회원탈퇴 -->
		UPDATE MEMBER 
		   SET  JOIN_YN = FALSE
		      , USE_YN = FALSE
		      , MODDATE = now()
		WHERE MEMBER_ID = #{member_id}
	</update>
	
	<select id="idfind" parameterType="MemberVO" resultType="String">
		SELECT MEMBER_ID 
		  FROM MEMBER 
		 WHERE MEMBER_NAME = #{member_name} 
		   AND BIRTH = #{birth} 
		   AND PHONE = #{phone}
	</select>
	
	<select id="pwdfind" parameterType="MemberVO" resultType="String">
		SELECT PWD FROM MEMBER WHERE 
		MEMBER_NAME = #{member_name} AND
		BIRTH = #{birth} AND
		MEMBER_ID = #{member_id}
	</select>
	
	<update id="newpwd" parameterType="MemberVO">
		UPDATE MEMBER SET
		PWD = #{pwd},
		MODDATE = now()
		WHERE MEMBER_ID =#{member_id}	
	</update>
	
	<select id="selectAuct" resultType="AuctionInfoVO">
		SELECT  PRODUCT_CD 
			  , IFNULL(BAY_MEMBER_ID, '') as BAY_MEMBER_ID
			  , IFNULL(MONEY_LAST, 0) as MONEY_LAST
			  , IFNULL(BAYNOW_MONEY, 0) as BAYNOW_MONEY
		FROM auctioninfo
		WHERE PRODUCT_CD = #{product_cd}
	</select>
	
	<select id="selectProd" resultType="ProductVO">
		SELECT prod.PRODUCT_NM 
			, prod.CLASS_BIG_CD
			, (SELECT cls.CLASS_NM FROM CLASS cls WHERE cls.CLASS_BIG_CD = prod.CLASS_BIG_CD AND CLASS_DIV = 'B') as CLASS_BIG_NM
			, prod.CLASS_MID_CD
			, (SELECT cls.CLASS_NM FROM CLASS cls WHERE cls.CLASS_BIG_CD = prod.CLASS_BIG_CD AND cls.CLASS_MID_CD = prod.CLASS_MID_CD AND CLASS_DIV = 'M') as CLASS_MID_NM
		FROM PRODUCT prod
		WHERE PRODUCT_CD = #{product_cd}
	</select>
	
	<select id="selectProdMember" resultType="MemberVO">
		SELECT MEMBER_ID, MEMBER_NAME, PHONE
		FROM MEMBER
		WHERE MEMBER_ID = (SELECT MEMBER_ID 
						  FROM PRODUCT
						  WHERE PRODUCT_CD = #{product_cd})
	</select>
	
	<select id="selectImg" resultType="String">
		SELECT FILENAME_THUMB 
		FROM PRODUCTIMG
		WHERE PRODUCT_CD = #{product_cd}
		LIMIT 1;
	</select>
	
	<insert id="payment" parameterType="PaymentVO">
		INSERT INTO PAYMENT
		VALUES(#{product_cd}, #{money_pay}, now())
	</insert>
	
	<select id="deliveryInfo" resultType="int">
		SELECT DELI_DIV_CD
		FROM DELIVERYINFO
		WHERE PRODUCT_CD = #{product_cd}
	</select>
	
	<insert id="delivery" parameterType="DeliveryVO">
		INSERT INTO DELIVERY
		VALUES(#{product_cd}, #{deli_nm}, #{deli_zipcode}, #{deli_addr1}, #{deli_addr2}, #{deli_phonenum} , now())
	</insert>
	
	<update id="auctionInfo">
		UPDATE AUCTIONINFO 
		   SET MONEY_LAST = #{money_last}
		     , BAY_MEMBER_ID = #{bay_member_id}
		     , PAYMENT_PROC_CD = '2'
		WHERE PRODUCT_CD = #{product_cd} 
	</update>
	
	<update id="productPayment">
		UPDATE PRODUCT
		   SET STATE_CD = #{state_cd}
		     , STATE_NM = #{state_nm}
		     , MODDATE = now()
		WHERE PRODUCT_CD = #{product_cd} 
	</update>
	
	<select id="wishTotal" resultType="int">
		SELECT COUNT(*) FROM PRODUCTWISH WHERE MEMBER_ID = #{member_id}
	</select>
	
	<select id="wishList" resultType="MemberProductVO">
		SELECT * 
	    FROM ( SELECT   @rownum:=@rownum+1 as rn
					  , WISH.PRODUCT_CD, WISH.PRODUCT_NM, WISH.STATE_CD, WISH.STATE_NM, WISH.REGDATE
					  , IFNULL((SELECT DATE_FORMAT(AUCT.ACUTDATE_START, '%Y-%m-%d %H:%s') FROM AUCTIONINFO AUCT WHERE AUCT.PRODUCT_CD = WISH.PRODUCT_CD), '') AS ACUTDATE_START_STR
					  , IFNULL((SELECT DATE_FORMAT(AUCT.ACUTDATE_END, '%Y-%m-%d %H:%s') FROM AUCTIONINFO AUCT WHERE AUCT.PRODUCT_CD = WISH.PRODUCT_CD), '') AS ACUTDATE_END_STR
					  , IFNULL((SELECT PRODIMG.FILENAME_THUMB FROM PRODUCTIMG PRODIMG WHERE PRODIMG.PRODUCT_CD = WISH.PRODUCT_CD ORDER BY PRODIMG.IMG_IDX ASC LIMIT 1), '') AS FILENAME_THUMB
		 		FROM ( SELECT PRODWISH.PRODUCT_CD, PROD.PRODUCT_NM, PROD.STATE_CD, PROD.STATE_NM, PRODWISH.REGDATE
						 FROM PRODUCTWISH PRODWISH LEFT JOIN PRODUCT PROD 
						   ON PRODWISH.PRODUCT_CD = PROD.PRODUCT_CD
						WHERE PRODWISH.MEMBER_ID = #{member_id}
						  AND prod.USE_YN = TRUE
						  AND PROD.STATE_CD IN ('3', '5', '6', '7')
		             ORDER BY PRODWISH.REGDATE DESC
			 		) WISH, (SELECT @rownum:=0)tmp
				)list 
		WHERE list.rn between #{start} and #{end}
	</select>
	
	<select id="buyList" resultType="MemberProductVO">
		SELECT buyprod.* 
		  FROM ( SELECT   @rownum:=@rownum+1 as rn
					    , bp.PRODUCT_CD, bp.PRODUCT_NM, bp.STATE_CD, bp.STATE_NM, bp.REGDATE, bp.PAYMENT_PROC_CD, bp.MEMBER_ID
					    , IFNULL(DATE_FORMAT(bp.ACUTDATE_START, '%Y-%m-%d %H:%s'), '') AS ACUTDATE_START_STR
					    , IFNULL(DATE_FORMAT(bp.ACUTDATE_END, '%Y-%m-%d %H:%s'), '') AS ACUTDATE_END_STR
					    , IFNULL((SELECT PRODIMG.FILENAME_THUMB FROM PRODUCTIMG PRODIMG WHERE PRODIMG.PRODUCT_CD = bp.PRODUCT_CD ORDER BY PRODIMG.IMG_IDX ASC LIMIT 1), '') AS FILENAME_THUMB
				  FROM ( SELECT  AUCT.PRODUCT_CD, PROD.PRODUCT_NM, PROD.STATE_CD, PROD.STATE_NM, PROD.REGDATE
							   , AUCT.PAYMENT_PROC_CD, AUCT.ACUTDATE_START, AUCT.ACUTDATE_END, AUCT.BAY_MEMBER_ID as MEMBER_ID
						   FROM AUCTIONINFO AUCT LEFT JOIN PRODUCT PROD
						     ON AUCT.PRODUCT_CD = PROD.PRODUCT_CD
						  WHERE AUCT.BAY_MEMBER_ID = #{member_id}
						    AND PROD.USE_YN = TRUE
						    AND PROD.STATE_CD IN ('5', '7')
	                        AND AUCT.PAYMENT_PROC_CD != '3'
					   ORDER BY AUCT.ACUTDATE_END DESC
					  ) bp, (SELECT @rownum:=0)tmp
			  )buyprod
		WHERE buyprod.rn between #{start} and #{end}
	</select>
	
	<select id="sellList" resultType="MemberProductVO">
		SELECT sellprod.* 
		  FROM ( SELECT   @rownum:=@rownum+1 as rn
					    , sp.PRODUCT_CD, sp.PRODUCT_NM, sp.STATE_CD, sp.STATE_NM, sp.REGDATE, sp.PAYMENT_PROC_CD, sp.MEMBER_ID
					    , IFNULL(DATE_FORMAT(sp.ACUTDATE_START, '%Y-%m-%d %H:%s'), '') AS ACUTDATE_START_STR
					    , IFNULL(DATE_FORMAT(sp.ACUTDATE_END, '%Y-%m-%d %H:%s'), '') AS ACUTDATE_END_STR
					    , IFNULL((SELECT PRODIMG.FILENAME_THUMB FROM PRODUCTIMG PRODIMG WHERE PRODIMG.PRODUCT_CD = sp.PRODUCT_CD ORDER BY PRODIMG.IMG_IDX ASC LIMIT 1), '') AS FILENAME_THUMB
				  FROM ( SELECT  PROD.PRODUCT_CD, PROD.PRODUCT_NM, PROD.STATE_CD, PROD.STATE_NM, PROD.REGDATE, PROD.MEMBER_ID
							   , AUCT.PAYMENT_PROC_CD, AUCT.ACUTDATE_START, AUCT.ACUTDATE_END
						   FROM  PRODUCT PROD LEFT JOIN AUCTIONINFO AUCT
						     ON PROD.PRODUCT_CD = AUCT.PRODUCT_CD 
						  WHERE PROD.MEMBER_ID = #{member_id}
						    AND PROD.USE_YN = TRUE
						    AND PROD.STATE_CD IN ('1','2','3', '5', '6', '7')
					   ORDER BY PROD.REGDATE DESC
					  ) sp, (SELECT @rownum:=0)tmp
			  )sellprod 
		WHERE sellprod.rn between #{start} and #{end}
	</select>
	
	<select id="sellCnt" resultType="int">
		SELECT  COUNT(PROD.MEMBER_ID) as cnt
   		FROM  PRODUCT PROD LEFT JOIN AUCTIONINFO AUCT
   		 ON PROD.PRODUCT_CD = AUCT.PRODUCT_CD 
 		 WHERE PROD.MEMBER_ID = #{member_id}
   		AND PROD.USE_YN = TRUE
   		AND PROD.STATE_CD IN ('1','2','3', '5', '6', '7')
	</select>
	
	<select id="buyCnt" resultType="int">
	SELECT  COUNT(AUCT.BAY_MEMBER_ID) as MEMBER_ID
	   FROM AUCTIONINFO AUCT LEFT JOIN PRODUCT PROD
	    ON AUCT.PRODUCT_CD = PROD.PRODUCT_CD
	  	WHERE AUCT.BAY_MEMBER_ID = #{member_id}
	  	 AND PROD.USE_YN = TRUE
	  	 AND PROD.STATE_CD IN ('5', '7')
	  	 AND AUCT.PAYMENT_PROC_CD != '3'
	</select>	
	  	 
	<delete id="chkDel">
		DELETE FROM PRODUCTWISH
		 WHERE PRODUCT_CD IN
		<foreach collection="list" item="type" open="(" close=")" separator=",">
			#{type}
		</foreach>
	</delete>
	
	<update id="stateChange">
		UPDATE PRODUCT 
		   SET  STATE_CD = '2'
		      , STATE_NM = '요청취소'
		      , MODDATE = now()
		WHERE PRODUCT_CD = #{product_cd}
	</update>
	
	<update id="paycancelauct">
		UPDATE AUCTIONINFO 
		   SET PAYMENT_PROC_CD = '3'
		WHERE PRODUCT_CD = #{product_cd}
	</update>
	
	<update id="paycancelprod">
		UPDATE PRODUCT 
		   SET STATE_CD = '8' 
		     , STATE_NM = '구매취소'
		     , MODDATE = now()
		WHERE PRODUCT_CD = #{product_cd}
	</update>
	
	<select id="qnaList" resultType="MemberQnaVO">
		 SELECT Q.* 
          FROM(
				SELECT @ROWNUM:=@ROWNUM+1 AS RN, a.*
                FROM(SELECT QNA.QNA_IDX, QNA.MEMBER_ID, QNA.TITLE, QNA.CONTENT, 
                IFNULL(DATE_FORMAT(QNA.REGDATE, '%Y-%m-%d %H:%s'), '') AS REGDATE_STR,
                QNAREPLY.CONTENT AS REPLYCONTENT, QNAREPLY.ADMIN_ID, QNAREPLY.REGDATE AS REPLYREGDATE
				FROM QNA LEFT JOIN QNAREPLY
				ON QNA.QNA_IDX = QNAREPLY.QNA_IDX
				WHERE MEMBER_ID = #{member_id}
                ORDER BY QNA.REGDATE DESC
                )a, (SELECT @ROWNUM:=0)TMP
			  )Q     
			WHERE Q.RN BETWEEN #{start} AND #{end} 
	</select>
	
	<select id="qnaCnt" resultType="int">
		SELECT COUNT(*)
		  FROM QNA 
		 WHERE MEMBER_ID = #{member_id}
	</select>
	
	<select id="selectUser" resultType="map">
		SELECT MEMBER_ID as username, PWD as password, JOIN_YN as enabled, M_TYPE as authority, MEMBER_NAME as member_name
		FROM MEMBER 
		WHERE MEMBER_ID = #{member_id} AND JOIN_YN = TRUE AND USE_YN = TRUE
	</select>
</mapper>

